volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  postgres:
    build: postgres
    container_name: postgres-local
    image: metagrid_local_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/local_postgres_data_backups
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      PGHOST: localhost
      PGPASSWORD: postgres
      PGUSER: postgres
    ports:
      - 5432:5432
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres', '-d', 'postgres']
      start_period: 5s
      interval: 5s
      timeout: 2s
      retries: 6

  django:
    container_name: django-local
    build: backend
    image: metagrid_local_django
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    environment:
      PGHOST: localhost
      PGPASSWORD: postgres
      PGUSER: postgres
      METAGRID_AUTHENTICATION_METHOD: globus
    network_mode: host
    ports:
      - 5000:5000

  react:
    container_name: react-local
    build:
      context: frontend
      target: build
    image: metagrid_local_react
    environment:
      - PORT=8080
    depends_on:
      - django
    volumes:
      - ./frontend:/app
      - /app/node_modules
    network_mode: host
    ports:
      - 8080:8080

  docs:
    build: docs
    container_name: docs-local
    image: metagrid_local_docs
    volumes:
      - ./docs:/docs
    ports:
      - '8001:8001'
