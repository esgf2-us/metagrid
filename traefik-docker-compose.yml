volumes:
  postgres_data: {}
  postgres_data_backups: {}

services:
  postgres:
    build: postgres
    image: metagrid_postgres
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_data_backups:/postgres_data_backups
    environment:
      POSTGRES_HOST_AUTH_METHOD: ""
      PGPASSWORD: ""
      PGUSER: ""
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "postgres" ]
      start_period: 5s
      interval: 5s
      timeout: 2s
      retries: 6

  django:
    build: backend
    image: metagrid_django
    restart: unless-stopped
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.services.django.loadbalancer.server.port=5000"
    #   - "traefik.http.routers.django.rule=Host(`esgf-dev1.llnl.gov`)"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    environment:
      PGHOST: localhost
      PGPASSWORD: postgres
      PGUSER: postgres
      # DJANGO_DEBUG: False
      # DJANGO_SECRET_KEY: ""
      # DJANGO_EMAIL_BACKEND: "django.core.mail.backends.smtp.EmailBackend"
      # DJANGO_SOCIAL_AUTH_REDIRECT_IS_HTTPS: True
      # DJANGO_SECURE_PROXY_SSL_HEADER: '["HTTP_X_FORWARDED_PROTO", "https"]'
      # DJANGO_SECURE_SSL_REDIRECT: True
      # DJANGO_SESSION_COOKIE_SECURE: True
      # DJANGO_CSRF_COOKIE_SECURE: True
      # DJANGO_SECURE_HSTS_SECONDS: 518400
      # DJANGO_SECURE_HSTS_INCLUDE_SUBDOMAINS: True
      # DJANGO_SECURE_HSTS_PRELOAD: True
      METAGRID_SEARCH_URL: https://esgf-node.llnl.gov/esg-search/search
      METAGRID_WGET_URL: https://esgf-node.llnl.gov/esg-search/wget
      METAGRID_STATUS_URL: https://nimbus-dev.llnl.gov/metagrid-backend/proxy/status
      METAGRID_SOLR_URL: https://esgf-node.llnl.gov/esg-search
      METAGRID_SOCIAL_AUTH_GLOBUS_KEY: d09a7432-d475-41be-9dda-0006d6a69fac
      METAGRID_SOCIAL_AUTH_GLOBUS_SECRET: rDUOeRcoNjQduEY5OYhcV3z6ec+wk2T9QzW1X97cR88=
      METAGRID_GLOBUS_CLIENT_ID: 8286db4d-269e-4c68-88a1-2af9a20f7f09
      METAGRID_AUTHENTICATION_METHOD: globus
      METAGRID_FOOTER_TEXT: |
        Privacy & Legal Notice: [https://www.llnl.gov/disclaimer.html](https://www.llnl.gov/disclaimer.html)    
        Learn about the Department of Energy's Vulnerability Disclosure Program (VDP): 
        [https://doe.responsibledisclosure.com/hc/en-us](https://doe.responsibledisclosure.com/hc/en-us)
    ports:
      - 5000:5000

  react:
    build:
      context: frontend
      target: prod
    image: metagrid_react
    # restart: unless-stopped
    # labels:
    #   - "traefik.enable=true"
    #   - traefik.docker.network=metagrid
    #   - "traefik.http.services.react.loadbalancer.server.port=8080"
    #   - "traefik.http.routers.react.rule=Host(`esgf-dev1.llnl.gov`)"
    environment:
      - PORT=8080
    depends_on:
      - django
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - 8080:8080

  docs:
    build: docs
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.services.docs.loadbalancer.server.port=8001"
    #   - "traefik.http.routers.doc.rule=Host(`esgf-dev1.llnl.gov`)"
    #   - "traefik.docker.network=metagrid"
    image: metagrid_local_docs
    restart: unless-stopped
    volumes:
      - ./docs:/docs
    ports:
      - "8001:8001"

  traefik:
    # The official v3 Traefik docker image
    image: traefik:v3.3
    container_name: traefik
    # labels:
    #   - "traefik.http.routers.dashboard.rule=Host(`traefik.esgf-dev1.llnl.gov`)"
    #   - "traefik.http.middlewares.test-redirectscheme.redirectscheme.scheme=https"
    #   - "traefik.http.middlewares.test-redirectscheme.redirectscheme.permanent=true"
    #   - "traefik.http.routers.dashboard.service=api@internal"
    #   - "traefik.http.routers.dashboard.middlewares=auth"
    #   - "traefik.http.middlewares.auth.basicauth.users=test:$$2y$$05$$q4KagWMdQqhGw/xa51DMTOutOqFVF6bw3AIIhog0FRHX6rWv9CHA6"
    depends_on:
      - react
      - django
    # Enables the web UI and tells Traefik to listen to docker
    # command: --providers.docker --entrypoints.web.address=:80 --entrypoints.web-secure.address=:443
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8002:8002"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
