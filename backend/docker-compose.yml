version: "3"

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  # This service uses the production Postgres Dockerfile as a base
  # Some tweaks are applied to support the Keycloak service, including the init.sql script
  postgres:
    build:
      context: .
      dockerfile: ./docker/production/postgres/Dockerfile
    image: metagrid_local_postgres
    container_name: postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
      - ./docker/local/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - ./.envs/.postgres
    ports:
      - "5433:5432"

  keycloak:
    # Source: https://github.com/keycloak/keycloak-containers/blob/master/docker-compose-examples/keycloak-postgres.yml
    image: jboss/keycloak
    container_name: keycloak
    # https://github.com/jhipster/generator-jhipster/issues/7157#issuecomment-367813386
    depends_on:
      - postgres
    volumes:
      - ./docker/local/keycloak:/opt/jboss/keycloak/imports
    env_file:
      - ./.envs/.keycloak
    ports:
      - "8080:8080"
    command: -Dkeycloak.import=/opt/jboss/keycloak/imports/realm-export.json
      -Dkeycloak.migration.strategy=IGNORE_EXISTING

  django:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    image: metagrid_local_django
    container_name: django
    depends_on:
      - postgres
      - keycloak
    volumes:
      - .:/app
    env_file:
      - ./.envs/.django
      - ./.envs/.postgres
    ports:
      - "8000:8000"
    restart: always
    command: /start
